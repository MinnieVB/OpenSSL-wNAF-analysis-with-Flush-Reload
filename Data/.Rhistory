data <- [0, 8, 9, -5, 0, -9, -6, 0, 1, -6]
data <- c(0, 8, 9, -5, 0, -9, -6, 0, 1, -6)
var(data)
dbinom(0, size=3, prob=1/2)
x = seq(0,3,by=1)
prob_x = dbinom(0, size=3, prob=1/2)
cbind(x,prob_x)
plot(x,prob_x,type='h', col=red,main='Binomial(3,1/2)')
plot(x, prob_x, type='h', col=red, main='Binomial(3,1/2)')
prob_x = dbinom(x, size=3, prob=1/2)
cbind(x,prob_x)
plot(x, prob_x, type='h', col=red, main='Binomial(3,1/2)')
plot(x, prob_x, type='h', col='red', main='Binomial(3,1/2)')
sum(x*prob_x)
y = seq(0,50,by=1)
prob_y = dbinom(y, size=3, prob=1/2)
prob_y = dbinom(y, size=50, prob=1/2)
plot(y, prob_y, type='h', col='red', main='Binomial(50,1/2)')
prob_y = dbinom(y, size=50, prob=0.2)
plot(y, prob_y, type='h', col='red', main='Binomial(50,0.2)')
x = seq(-1, 2, length=100)
unif01 = dunif(x, min=0, max=1)
plot(x, unif01, type='l', col='red', main='Uniform[0,1]')
x = seq(-3, 3, length=100)
normal01 = dnorm(x, mean=0, sd=1)
plot(x, normal01, type='l', col='red', main='Normal(0,1)')
rbinom(1, 10, prob=0.5)
rbinom(1, 10, prob=0.5)
rbinom(1, 10, prob=0.5)
binom_sample = rbinom(1000, 10, prob=0.5)
table(binom_sample)
freq = table(binom_sample)
barplot(freq, xlab='X=number of heads')
qexp(0.25,1/5)
setwd('~/Desktop/OpenSSL-wNAF-analysis-with-Flush-Reload/Data/')
#Read in the data
rands = read.table('random_test_vals', header=T)
rands = read.table('random_test_vals.csv', header=T)
rands = read.table('random_test_vals.csv', header=T)
head(rands)
rands = read.table('random_test_vals.csv', header=F)
head(rands)
rands = read.table('random_test_vals.csv', header=T)
head(rands)
attach(rands)
hist(missing_pos$positions, breaks = 100, freq = FALSE, right = TRUE, density = 10, angle = 45, col = 'BLUE', border = NULL, main = paste("Histogram of Positions of missing bits"), xlab = "Positions of missing bits")
hist(rands$test_vals, breaks = 100, freq = FALSE, right = TRUE, density = 10, angle = 45, col = 'BLUE', border = NULL, main = paste("Histogram of random values"), xlab = "Random Values")
hist(as.hexmode(rands$test_vals), breaks = 100, freq = FALSE, right = TRUE, density = 10, angle = 45, col = 'BLUE', border = NULL, main = paste("Histogram of random values"), xlab = "Random Values")
hist(as.decimal(rands$test_vals), breaks = 100, freq = FALSE, right = TRUE, density = 10, angle = 45, col = 'BLUE', border = NULL, main = paste("Histogram of random values"), xlab = "Random Values")
hist(strtoi(rands$test_vals, base = 16), breaks = 100, freq = FALSE, right = TRUE, density = 10, angle = 45, col = 'BLUE', border = NULL, main = paste("Histogram of random values"), xlab = "Random Values")
rands$rand_ints = strtoi(rands$test_vals, base = 16)
head(rands)
rands$rand_chars = as.character(rands$test_vals)
head(rands)
rands$rand_ints = strtoi(rands$test_chars)
head(rands)
rands = read.table('random_test_vals.csv', header=T)
head(rands)
rands$rand_chars = as.character(rands$test_vals)
rands$rand_ints = strtoi(rands$test_chars)
rands = read.table('random_test_vals.csv', header=T)
rands$rand_chars = as.character(rands$test_vals)
head(rands)
rands$rand_ints = strtoi(rands$test_chars, base 16)
rands$rand_ints = strtoi(rands$test_chars, base = 16)
rands$rand_ints = strtoi(rands$test_chars, base = 0L)
head(rands)
rands$rand_ints = strtoi(c(rands$test_vals))
head(rands)
rands = read.table('random_test_vals.csv', header=T)
head(rands)
rands$rand_ints = strtoi(c(rands$test_hex))
head(rands)
as.integer('0x4D2')
#colnames(Countries) = c('Country', 'LifeExp', 'GDP', 'HIV')
as.integer(rands$test_hex)
